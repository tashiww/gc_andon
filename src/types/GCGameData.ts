// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

export interface Gamedata {
    ResearchDataTypes:                { [key: string]: ResearchDataType };
    InteractableTilesProperties:      { [key: string]: InteractableTilesProperty };
    IconProperties:                   { [key: string]: IconProperty };
    Skills:                           { [key: string]: Skill };
    StorageProperties:                StorageProperties;
    Modules:                          { [key: string]: Module };
    ObjectLookProperties:             { [key: string]: ObjectLookProperty };
    AssemblyProperties:               { [key: string]: AssemblyProperty };
    Materials:                        { [key: string]: MaterialValue };
    ConveyorProperties:               { [key: string]: ConveyorProperty };
    RecurringCostProperties:          { [key: string]: RecurringCostProperty };
    DevelopmentProjects:              { [key: string]: DevelopmentProject };
    BuildableProperties:              { [key: string]: BuildableProperty };
    ProgressNodes:                    { [key: string]: ProgressNode };
    SpecialFlagsProperties:           { [key: string]: { [key: string]: boolean } };
    InventoryProperties:              { [key: string]: InventoryProperty };
    FlagTilesProperties:              { [key: string]: FlagTilesProperty };
    ResearchAndDevelopmentProperties: { [key: string]: ResearchAndDevelopmentProperty };
    BlueprintPrinterProperties:       Properties;
    ObjectTypes:                      { [key: string]: ObjectType };
    ProductTypes:                     { [key: string]: ProductTypeValue };
    LogisticsWorkplaceProperties:     LogisticsWorkplaceProperties;
    SkillRequirementsProperties:      Properties;
    ModuleCategories:                 { [key: string]: Category };
    ProjectCategories:                { [key: string]: Category };
    ProductFeatures:                  { [key: string]: ProductFeature };
    MovableProperties:                Properties;
    InventoryGroupProperties:         InventoryGroupProperties;
    CrafterProperties:                { [key: string]: CrafterProperty };
    TuningValues:                     { [key: string]: number };
    StaticDimensionProperties:        { [key: string]: StaticDimensionProperty };
    InterfaceNodesProperties:         { [key: string]: InterfaceNodesProperty };
    TransferTilesProperties:          { [key: string]: TransferTilesProperty };
    SkillTypeCategories:              { [key: string]: Category };
    BuildableCategories:              { [key: string]: Category };
}

export interface AssemblyProperty {
    ProductTypes: ProductTypeElement[];
}

export interface ProductTypeElement {
    Duration:      number;
    ProductTypeID: number;
}

export interface Properties {
}

export interface Category {
    IconAssetID: null | string;
    Order:       number;
    Name:        string;
    Description: string;
}

export interface BuildableProperty {
    Category:               number;
    AddHappinessToWorkzone: number;
    CanBeBuiltOutdoors:     boolean;
    OrderInCategory:        number;
    NeededMaterials:        Material[];
    BuildDuration:          number;
    BuildCost:              number;
    MustBeBuiltInWorkzone:  boolean;
}

export interface Material {
    Amount:     number;
    MaterialID: number;
}

export interface ConveyorProperty {
    IsRollerband: boolean;
    IsConveyor:   boolean;
    IsOverhead:   boolean;
}

export interface CrafterProperty {
    AutomaticStorageMultiplier: number;
    Automatic:                  boolean;
    SwitchingDuration:          number;
    PossibleModules:            PossibleModule[];
}

export interface PossibleModule {
    Duration:  number;
    BatchSize: number;
    ModuleID:  number;
}

export interface DevelopmentProject {
    Lane:                number;
    Name:                string;
    IconAssetID:         string;
    Tier:                number;
    UnlocksBuildables:   any[];
    UnlocksModules:      number[];
    IsHidden:            boolean;
    RequiredData:        RequiredDatum[];
    Description:         string;
    OrderInCategory:     number;
    UnlocksProductTypes: any[];
    RequiredProjects:    number[];
    DiscoveryPoints:     number;
    CategoryID:          number;
}

export interface RequiredDatum {
    Amount:     number;
    DataTypeID: number;
}

export interface FlagTilesProperty {
    Tiles: FlagTilesPropertyTile[];
}

export interface FlagTilesPropertyTile {
    Y:     number;
    X:     number;
    Flags: number;
}

export interface IconProperty {
    TextSpriteAssetID: IconPropertyTextSpriteAssetID;
    IconAssetID:       string;
    TextSpriteEntry:   string;
}

export enum IconPropertyTextSpriteAssetID {
    Empty = "",
    IconsBuildables = "icons_buildables",
}

export interface InteractableTilesProperty {
    InteractableTiles: InteractableTile[];
}

export interface InteractableTile {
    Y: number;
    X: number;
}

export interface InterfaceNodesProperty {
    InterfaceNodes: InterfaceNode[];
}

export interface InterfaceNode {
    Y:       number;
    X:       number;
    IsInput: boolean;
}

export interface InventoryGroupProperties {
    "43": The43;
}

export interface The43 {
    SlotCapacity: number;
}

export interface InventoryProperty {
    IsLogistic:    boolean;
    SlotType:      number;
    NumberOfSlots: number;
}

export interface LogisticsWorkplaceProperties {
    "70": The70;
}

export interface The70 {
    Reach: number;
}

export interface MaterialValue {
    TextSpriteEntry:   string;
    Name:              string;
    ModelAssetID:      string;
    StackSize:         number;
    SizeType:          number;
    TextSpriteAssetID: MaterialTextSpriteAssetID;
    IconAssetID:       string;
    StackBuyPrice:     number;
    Description:       string;
}

export enum MaterialTextSpriteAssetID {
    IconsComponents = "icons_components",
    IconsMaterials = "icons_materials",
    IconsModules = "icons_modules",
}

export interface Module {
    SamplingTime:       number;
    OutputAmount:       number;
    Name:               string;
    OrderInCategory:    number;
    Tags:               string;
    CategoryID:         number;
    ResearchDataYield:  RequiredDatum[];
    IconAssetID:        string;
    MaterialID:         number;
    BaseMarketPrice:    number;
    InputMaterials:     Material[];
    GridDimensions:     InteractableTile[];
    Features:           Feature[];
    Tier:               number;
    AssemblyTime:       number;
    BaseMarketCapacity: number;
    Description:        string;
}

export interface Feature {
    FeatureID: number;
    Value:     number;
}

export interface ObjectLookProperty {
    CanChangeColor: boolean;
    ModelAssetID:   string;
}

export interface ObjectType {
    Name:        string;
    Description: string;
}

export interface ProductFeature {
    PriceBonus:    number;
    IsDrawback:    boolean;
    Name:          string;
    SymbolAssetID: string;
    Description:   string;
}

export interface ProductTypeValue {
    Name:                    string;
    BaseMarketPrice:         number;
    IconAssetID:             string;
    NegativeFeatures:        any[];
    GridFields:              InteractableTile[];
    MandatoryFeatures:       number[];
    RequiredDiscoveryPoints: number;
    ProductAssetID:          string;
    PositiveFeatures:        any[];
    Description:             string;
    MarketTier:              number;
    Cases:                   Case[];
}

export interface Case {
    BlockingFields: InteractableTile[];
    CaseModuleID:   number;
}

export interface ProgressNode {
    UnlocksSkills:           number[];
    Lane:                    number;
    UnlocksMarkets:          number[];
    Name:                    string;
    NodeNetWorth:            number;
    NodeGroup:               number;
    IconAssetID:             string;
    RequiredProjects:        number[];
    RequiredSuccessPoints:   number;
    UnlocksBuildables:       number[];
    RequiredDiscoveryPoints: number;
    Tier:                    number;
    RequiredMoney:           number;
    UnlocksPolicies:         number[];
    RequiredData:            RequiredDatum[];
    IsHidden:                boolean;
    CategoryID:              number;
    Description:             string;
}

export interface RecurringCostProperty {
    RecurringCost: number;
}

export interface ResearchAndDevelopmentProperty {
    Speed:            number;
    PossibleModules:  number[];
    CanDoDevelopment: boolean;
    CanDoResearch:    boolean;
}

export interface ResearchDataType {
    DevelopmentTime: number;
    NetWorth:        number;
    Name:            string;
    IconAssetID:     string;
}

export interface Skill {
    Name:                 string;
    SkillEffectValue:     number;
    AdditionalHiringCost: number;
    IconAssetID:          string;
    SkillEffectID:        number;
    RequiredHappiness:    number;
    Description:          string;
    ExperienceCost:       number;
    OrderInCategory:      number;
    SuccessPointsCost:    number;
    WageIncrease:         number;
    CategoryID:           number;
}

export interface StaticDimensionProperty {
    BlockedTiles: InteractableTile[];
}

export interface StorageProperties {
    "2": The2;
}

export interface The2 {
    SizeType:     number;
    ModelAssetID: string;
}

export interface TransferTilesProperty {
    Tiles: TransferTilesPropertyTile[];
}

export interface TransferTilesPropertyTile {
    Y:                 number;
    X:                 number;
    PushDirections:    number;
    ReceiveDirections: number;
}

export {}